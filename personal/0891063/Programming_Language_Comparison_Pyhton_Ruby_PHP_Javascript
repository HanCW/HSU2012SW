php의 장점
1.open sourece 이기 때문에 별다른 비용없이 사용할 수 있으며 사용이 자유롭기 때문에 사용자와의 feedback을 많이 받을 수 있다. 그렇기 때문에 php관련 자료를 찾을 때 쉽게 찾아볼 수 있다.
2. 어떤 운영체제에서도 동작가능하다. 다른 웹언어의 특정운영체제를 사용해야 하지만, php는 유닉스 윈도우 등 구애받지 않고 사용가능하다. 특히 구축비용이 없는 APM(Apache_Php_Mysql)으로 많이 사용된다.
3. DB지원기능이 강력하기 때문에 쉽게 DB와 연동가능하며 또한 다양한 DB와 연결을 할 수 있으며 따라서 주로 서버에서 돌아가는 프로그램을 작성할 때 주로 사용된다.
4. 시스템의 자원을 많이 쓰지 않기 때문에 실행속도가 빠르며, 
5. 

python의 장점
1.interpreter language로써 개발자가 코딩할 때 결과를 그때그때 확인 할 수 있다.
2. 속도는 느리지만 생산성이 뛰어나다. c나 java의 언어와 비교할 때 같은 프로그램이라도 코드 수, 제작시간에서 python이 더 적은 코드수와 시간을 들인다.
3. 입문하기 쉬운 언어이다. 문법이 간결하고 깔끔하기 때문에 다른 언어의 코드보다 읽기 쉬워서 프로그래머가 아닐지라도 쉽게 배울 수 있다고 한다. 
4. 편리하다. 일례로 동적인 타이핑을 제공하기 때문에 자료형(ex. int,double)을 써주지 않아도 변수안에 담겨진 내용에 따라 자료형이 정해지며 또한 라이브러리에서도 다양한 라이브러리를 지원하는데 대표적으로 매트랩을 지원하는 라이브러리가 있다.
5. 

Ruby의 장점
1. 어떤 플랫폼(unix,window,mac)에서 루비인터프리터가 있어서 동작할 수 있다.
2. python처럼 인터프리터 언어로서 오류나 결과를 즉시 확인할 수 있다.
3. python처럼 동적 타이핑을 지원하는 언어이다.
4. 메타프로그래밍을 지원한다. 메타프로그래밍은 반복적이고 정형화된 코드를 생성하는 역할을 하는데 이것은 개발자의 수고로움을 덜어주며 유지보수가 용이하다는 장점이 있다.
5. 

Java script의 장점
1. 컴파일과정 없이 웹상에서 바로 수행할 수 있다.
2. 주로 HTML문서내에서 쓰여지기 때문에 별다른 개발킷이 없어도 사용할 수 있다.
3. 역시 호환성이 뛰어나 어떤 운영체제에서든 사용할 수 있다.
4. 매우 많은 유저들이 사용하고 있기 때문에 자료를 관련 자료나 지식을 쉽게 습득할 수 있다.
5. 


