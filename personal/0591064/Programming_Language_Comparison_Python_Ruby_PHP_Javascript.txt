  1. Python
  컴파일을 거치지 않고 프로그램을 바로 매 라인단위로 처리하는 인터프리터 언어이지만 최근에는 스스로 소스 코드를 컴파일하여 바이트 코드를 만들어 냄으로써 다음에 수행할 때에는 빠른 속도를 보여 준다. 이는 소스 코드의 유출 등의 보안 문제도 해결할 수 있다.
   파이썬의 블록 구조는 들여쓰기를 이용한다. 이는 정리되어 들여쓰기가 잘 된 C언어와 같은 모습이라고 볼 수 있으며, 모든 사용자로 하여금 코드 작성 스타일의 통일성을 유지하게 해준다.
  교육용으로 설계되었기 때문에 가독성이 높다.

  2. Ruby
  동적 객체 지향 스크립트 프로그래밍 언어이다. 이식성이 매우 높아서 맥 OS X, 윈도 95/98/Me/NT/2000/XP, 도스, BeOS, OS/2 등에서 동작 한다. 인터프리터 또한 다양한 플랫폼에 이식되어 있다. Ruby on Rail 이나 JRuby 등과 같은 응용범위도 넓다. 스크립트 언어이자 객체 지향적 언어이며 가독성이 뛰어나다는 특징은 Python과 유사하지만, Python의 들여쓰기 블록 구조와 같은 정형화된 서식을 요구하지 않는다.

  3. PHP
  HTML에 포함되어 동작하는 스크립트 언어이다. 브라우저상에서 작동되는 HTML이나 Javascript와는 달리 PHP는 서버상에서 작동이 되어 모든 결과를 HTML로 만들어서 클라이언트로 보내준다. 때문에 사용자에게 소스코드가 공개되지 않는다.
  PHP의 장점으로 “직관적이다” 라는 말을 많이 접할 수 있는데 C나 JAVA같은 프로그래밍 언어와는 달리 PHP에서의 배열은 인덱스 배열과 연관 배열을 지원한다는 점을 예로 들 수 있다.

  4. JavaScript
  객체 기반의 스크립트 프로그래밍 언어로서 웹 사이트에서의 사용으로 많이 알려져 있지만, 다른 응용프로그램의 내장 객체에도 접근 할 수 있는 기능을 가지고 있다.
  HTML는 브라우저상에서 텍스트, 이미지 등을 보여줄 수 있으나 이러한 미디어를 세부적으로 컨트롤하는 프로그래밍은 불가능하다. 이러한 단점을 보완하여 만든 언어가 JavaScript이다. 최근 모바일 웹앱과 하이브리드 앱의 중요성이 부각 되면서 HTML과 더불어 JavaScript의 중요성 역시 확대 되고 있다.