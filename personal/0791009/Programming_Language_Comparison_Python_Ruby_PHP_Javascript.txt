phython
일단 파이썬의 장점은 C/C++과 유사하다는 것입니다. C/C++을 사용해 본 프로그래머에겐 이것 하나만으로 장점이 여러 개가 됩니다. C/C++에서 제공되는 함수, 인자 타입, class 등이 C/C++과 비슷하기 때문에 phython을 학습하면서 C/C++을 복습하는 느낌을 받을 수 있고 C로 구현된 모듈을 쉽게 만들어 적용할 수도 있습니다. phython만으로는 빠른 속도가 요한 반복 계산이나 하드웨어를 직접 건드리는 프로그램을 하기에는 적합하지 않습니다. 이를 보완하기 위해 phython을 전반적인 뼈대로 사용하고 파이썬에 적합하지 않은 부분은 C로 만들어 포함시키면 프로그램의 속도도 향상되고 프로그래밍 하는 속도를 높일 수 있습니다. 또 무료라는 점도 빼 놓을 수 없는 장점입니다. 그리고 다양한 OS환경에서 프로그래밍이 가능합니다. 


ruby
루비는 객체지향 언어라는 말이 아주 잘 어울리는 언어입니다. 이 언어를 만든 유키히로 마츠모토는 파이썬보다 객체지향적인 언어가 필요해서 만들었다고 합니다. 루비에서 모든 형태는 인스턴트 변수와 메소드로 이루어진 객체입니다. 루비는 간결하고 단순한 코딩이 가능하기 때문에 생산성이 높습니다. 프로그래머의 편의대로 재정의 할 수 있는 부분이 많아 유연하며 표현이 자유롭다는 점에서 딱딱하고 제한된 문법에서 벗어나게 해줍니다. 자연어와 가깝기 때문에 배우기도 쉽다고 합니다. 하지만 C언어에 익숙해진 프로그래머에겐 생소하게 느껴져 phython에 비해 거부감이 들 수 도 있습니다. 파이썬과 마찬가지로 여러 OS에서 동작 가능합니다.

php
php의 사전 검색에서 생소할 수 있는 부분은 '동적 사용자'와 'CGI'라는 단어입니다. 웹은 HTML언어로만 작성되어있고 HTML문서는 정적라고 합니다. 하지만 웹서핑을 해보면 전혀 정적인 느낌이 들지 않습니다. 이렇게 사용자로 하여금 웹페이지가 정적이라는 생각을 하지 못하도록 도와주는 게 php언어에서는 CGI라고 합니다. CGI는 사용자가 서버에 데이터를 요청 했을 때 요청한 데이터에 맞게 응용프로그램을 실행시켜 결과를 되돌려주는 역활을 합니다. php는 java script와 다르게 응용프로그램의 소스가 공개되지 않습니다. 왜냐하면 서버에서 응용프로그램에 요청하면 사용자가 전달 받는 것은 php로 만든 프로그램 소스가 포함된 것이 아니라 HTML문서이기 때문입니다.


java script
java script도 php처럼 동적인 웹페이지를 구현하기 위해 만들어졌습니다. java script를 php와 비교하면 구조적으로 php는 서버에서 동작하고 java script는 클라이언트에서 동작한다는 점이 다르다고 할 수 있습니다. 클라이언트에서 동작하기 때문에 사용자가 요청한 정보를 전달하는 속도가 빠릅니다. java script 자바스크립트 코드는 HTML 페이지 내에 삽입되어 코딩할 수 있고 브라우저에서 실행할 수 있습니다. 웹에서 간단한 프로그램을 작성하기 적합하며 신속하게 개발할 수 있습니다. 하지만 웹브라우저의 소스보기 기능을 이용하면 소스가 모두 드러나 버리기 때문에 보안에 취약합니다. php가 만들어진 이유 중 하나가 이러한 문제를 보완하기 위해서 라고 합니다.  