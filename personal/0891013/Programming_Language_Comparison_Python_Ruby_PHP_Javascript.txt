Python
1. 플랫폼 독립적인 언어이기 때문에 다양한 OS에서 실행이 가능하다. JAVA처럼 바이트 코드를 사용한다.
2. 동적데이터타입을 결정하므로 데이터 타입에 상관없이 일반화된 코드 작성이 용이하다.
3. 다른 언어와 결합할 수 있다. 접착제 언어(glue language)라고도 하는데 wrapper function만 있으면 python에서 사용이 가능하다. (이식성이라고도 함), Ruby보다는 덜 함.
4. 객체지향적인 인터프리터(interpreter, 한 번에 기계어로 변환하지 않고, 한 단계씩 기계어로 변환하는 것)언어이다. 
5. 문법구조가 간단하다. 
6. Freeware, 무료이다.

Ruby
1. 형선언이 없어 프로그램이 간결하다.
2. 객체지향 언어, 숫자, 문자열 등도 객체이다. Python과는 다름.
3. 모든 객체에 대해 가비지 콜렉터(garbage collector)를 지원한다. (사용하지 않는 객체를 메모리에서 찾아 해체하는 것)
4. OS와 관계 없이 쓰레딩을 지원한다. 멀티 쓰레드가 가능하다.
5. JAVA나 Python처럼 예외처리(exception handling)를 지원하기 때문에 에러처리가 수월하다.
6. transportability(호환성), Python처럼 다양한 운영체제에서 실행이 가능하다.(리눅스, 도스, 윈도우 등)

PHP
1. 웹서버에서 해석한 후 처리되는 스크립트 언어이다. html에서 코드 작성 가능. 에러 발생시 웹에서 확인 가능하여 디버그가 수월해졌다.
2. 다양한 웹서버에서 동작이 가능하다. (Unix, Linux 등)
3. 인터프리터(interpreter) 방식이라 실행속도가 그렇게 크게 느리지 않다.
4. 포인터를 제공하지 않으며, 매개변수 값의 전달은 모두 참조에 의한 전달(call by value)이다.
5. 소스가 방대해서 include 등을 통해 우리어졌던 작업들이 PHP에는 들어있다. 그냥 작성하기만 하면 된다. 때문에 작성 코드양이 줄어들었다.

Javascript
1. 객체 기반의 스크립트 프로그래밍 언어이다.
2. PHP처럼 인터프리터(interpreter) 방식을 채택하고 있다.
3. 클라이언트에서 실행되기 때문에 서버 부하를 줄일 수 있고, 네트워크를 통해서 서버에 전달하지 않아도 작성한 내용을 즉시 확인 할 수 있다. 
4. C에 바탕을 둔 JAVA와 구문이 유사하다는 점 때문에 라이브스크립트에서 이름이 바뀌었지만 실제 관련성은 없다.
5. 웹에서 수행할 html에서 직접 작성한다. 웹에서 실행하기 때문에 파일이나 메모리관리가 필요가 없다. 
6. 문법이 쉽고, 갖춰진 함수와 객체를 사용하여 프로그래밍이 쉽다. 특수한 개발도구가 필요하지 않다.

