/* Python Ruby PHP Javascript 장점 및 비교 */

 Python은 귀도 반 로섬에 의해 선보여졌고, 첫 버전 부터 객체 지향적으로 잘 만들어진, 널리 쓰이는 스크립트 언어이다. ruby와 비교하자면, 둘 다 객체지향 해석형 언어
 이지만 순수 객체지향 언어인 반면 python은 하이브리드형 객체지향 언어이다. 
 그렇기 때문에 배우기도 쉽고, 간결한 짜임새 덕분에 효율적인 언어이다. 
 Glue언어라고도 하는 python은 라이브러리 임포트가 가능하며, java와도 연관이 가능하다. 
 또한, 문법이 간단하고 수준 높은 내장 객체 자료형이 제공된다고 한다. 따라서 개발기간도 짧고 유지보수가 쉬워진다. 그리고 여러개의 소스로 하나를 구현하는 것도 유용하고 메모리를 자동관리 하며 확장성이 뛰어나다. 
 'MATLAB 수준의 간단한 코드만 만들면 C 수준의 속도를 내주는 free open source 라이브러리'라는 문장을 구글의 한 블로그에서 보았는데, 부분 최적화를 하면 유사한 수준에 도달이 가능하다는 이야기이다. 그러나 multi-thread에서는 성능문제가 조금 보안되어야 할 점이wl만, MATLAB 수준의 기본 명령어들을 가지고 있기 때문에 수치해석이 포함된 코드 개발속도가 빠르므로 발전 가능성이 높다고 본다. 

  Ruby란, 객체지향 프로그래밍이며 신택스를 간소화시켜 깔끔할 뿐만 아니라, 
  ruby의 동적 타이핑과 맞물려서 ruby로 작성된 코드프로그램 작성을 돕는다.
  ruby는 Smaltalk의 개념적 세련됨과 Python의 학습과 사용의 용이성, 그리고 Perl의 실용성을 승계하였다고 하는데, python과는 라이벌 관계에 있는 언어이다. 위에서 말했듯 같은 객체지향 해석형 언어이기 때문이지만 하이브리드형과 달리 ruby는 순수 객체지향 언어이고 범용 프로그래밍 언어이다.  
  텍스트 처리가 뛰어난 ruby는 Lisp의 클로져(Closure)와 메타프로그래밍(Metaprogramming) 기능 또한 지원하며, Perl의 강력한 정규식 기능도 지원하고 있다. 
  또한, php보다 소스코드 관리가 편리한 점을 장점으로 꼽을 수 있고, 코드의 간결성 덕분에 자바보다 간편하다.
  또, 직관적이고 이해하기에 쉽다는 점이 유용하다고 생각된다.
  그리고 코드의 가독성은 탁월한 반면, 약간의 실행속도의 아쉬움이 있으므로 그 부분이 보안된다면 더욱 최적화된 작업환경을 만들 수 있을 것 같다.  
  하나더 추가하자면 ruby의 강점을 확실히 드러내는 프레임워크는 레일스이며, 이것의 웹 개발은 java에 비해 적어도 5배 이상 더 빠르다. 왜냐하면 ruby만 지원할 수 있는 고차원 프로그래밍 기법을 활용하여 설계되었기 때문이라고 한다.
  레일스를 통한 마케팅으로 ruby의 효용성이 더욱 입증되었다. 
  따라서, ruby를 익한다면 실무의 활용 뿐만아니라 새로운 기술을 배우는 것과 같다고 하니 참고하면 유용 할 것이라 생각된다.  
        


	   PHP는 Rasmus Lerdorf가 1994년에 처음 만들었고, 서버에서 해석되는 스트립트 언어이다. PHP는 텍스트, 특히 HTML의 처리에 강점을 가지고 있다.
	    부연하자면, 동적 웹 페이지를 만들기 위해 설계되었으며 이를 구현하기 위해 PHP로 작성된 코드를 HTML 소스 문서 안에 넣으면 PHP 처리 기능이 있는 웹 서버에서 해당 코드를 인식하여 작성자가 원하는 웹 페이지를 생성한다.
	     예를 들면, URL의 파싱이나 form 처리, 정규 표현식 등이 있다.  
	      또한, ruby와 비교하면 범용 프로그래밍 언어이고 php는 웹 전용 개발언어이면서도 명령 줄 인터페이스 방식의 자체 인터프리터를 제공하는
	       범용 프로그래밍 언어이다. 
	        그리고, 그래픽 application을 제작할 수도 있고 다양한 데이터베이스를 지원하므로 user들의 징검다리 역할을 수행한다. 
		 데이터베이스를 연동 할 경우, C나 Perl에비해 php의 사용법이 훨씬 쉽다는 점도 꼽을 수 있다.
		   또, C나 Perl의 문법과 php는 비슷하지만 php는 class를 지원하므로 효율적인 코딩이 가능하고 코드 작성도 간편하여 쉽게 쓰일 수 있다.
		    마지막으로, windows환경에서는 CGI방식 또는 multi-threading 방식
		     으로 모두 작동되고, unix환경에서 CGI방식과 모듈방식으로 작동된다. 
		      따라서 unix와 windows환경 모두에서 작동이 가능하다는 점이 이롭다.
		             

			       Javascript는 넥스케이프 커뮤니케이션스사가 개발한 스크립트 언어이고 자바를 응용하여 사용이 쉽게 만들었다. html문서에서 사용되서 interective web page를 만들 수 있게 한다. 자바스크립트는 서버에서 구동되는 언어가 아니고, 클라이언트 즉, 브라우져에서 해석되는 언어이다.  웹프로그래밍을 한다면 기본적으로 이것을 쓴다. Javascript에서는 메세지 출력, HTML 개체의 움직임, 심지어는 유니코드 분석도 가능하다. 그리고, 다른 언어들 보다 cofile, 컴퓨터 언어로 해석이나 변환하는 과정이 없기 때문에 접근이 쉽고, 독립적인 flat form을 하는 언어이기 때문에, 모든 운영체제에 대하여 작동이 용이하다.
			       또한, 명령어의 수가 비교적 많은 편이 아니고 문법또한 쉬운 편이며 java는 C++와는 다르게  처음 설계가 시작되는 시점부터 완벽하게 객체를 고려한 설계이다. 
			       C언어 프로그램의 기반에 객체의 부분을 추가한 것이어서 완전하지 않고 JAVA는 이것을 극복한 객체지향적인 언어이며, multi thred를 지원한다. 
			       thred는 program에서 독립으로 시행하는 작은 실행단위이다. 자바는 이것을 multi로 가능하는 multi thred를 지원한다. 또한 동시에 작업을 할 수 있는 기능이다.

