한성대학교 멀티미디어공학과 0891087 한재영
Pytion, Ruby, PHP, Javascript 각 언어의 장점을 5가지씩 정리 및 비교

1. Python
  1) 간단 명료하게 가장 큰 장점은 인터프리트 언어이다. 다시말해서 C언어와 같이 모든 코드를 써서 컴파일을 하는하는 것이 아니고, 한줄의 코드를 입력하면 바로 그 코드가 에러인지 아닌지를 알 수 있다. 이에따라 사용자가 버그를 발견하면 즉시 수정하능하므로 개발시간이 단축된다는 장점을 같고 있다.
  2) 다른 언어들에 비해서 코드가 단조롭기 때문에 배우기도 쉽고 사용하기도 편하다. C언어를 학교 초기에 많이 배우는데 C언어를 어느 정도 볼 줄 안다면 Python을 활용하는데는 큰 무리가 따르지 않는 것으로 보인다. 만약 프로그램 언어를 배운다면 Python을 배우고 C언어쪽을 배우는것도 나쁘지 않다고 본다.
  3) Python에 명시하고 있는것들 모두가 객체로 취급이 된다. 따라서 Python은 Introspection방법이기 때문에 명시한 객체들의 정보를 검색, 관리, 조작하는것이 쉽다. 예를 들어서 코드를 작성할때 함수를 선언하지 않고도 자동으로 정의되거나, 인자가 없어도 함수 호출이 가능하다. 함수를 선언할때 아무것도 지정한 값이 없으면 기본값을 사용한다.
  4) 자료형을 선언하는 다른 언어와는 다르게 변수나 인수 자체로 선언하여 바로 사용이 가능하다는 점이 있다. 다른 언어 같은경우 자료형을 잘못쓰면 바로 오류가 검출 되지만 이런 점에 있어서 사용자에게 편의성을 제공한다는 점이다.
  5) 무료 컴파일러이기 때문에 개발자들의 경제적 부담감을 덜어주고 그로 인해 더욱 많은 사람들이 찾는 언어이다. 물론 Python말고도 무료로 사용할 수 있는 언어들이 많이 있다.

2. Ruby
  1) 모든 형태에 메소드와 인스턴트 변수를 받기때문에 그 모든것이 자신만의 속성을 같는 객체로 이루어져 일관되게 적용되기 때문에 사용자로 하여금 루비의 사용법을 쉽게 다가갈 수 있도록 해준다.
  2) 사용자가 원하면 코어부분을 제거한 다음 재정의할 수 있도록 하여 이미 존재하는 코드에 덧붙일 수 있도록 해준다. 예를들어 연산자 +를 제거한 후 사용자가 임의로 plus라고 재정의하면 연산자 +대신에 plus라고 코드를 입력하면 기존의 +기능을 구현할 수 있는 것이다.
  3) 사용자가 메소드에든 클로저를 추가하여 해당 메소드의 동작을 보일 수 있다. 이를 블럭이라 하는데, 다른 명령형 언어와는 다르다는 점이다. 
  4) 다른 언어들과 달리 임의적으로 단일 상속을 할 수 있도록 구성되어 있다. 클래스에서 모듈을 믹스인 가능하도록 되어 있는데, 이를 사용하면 메소드를 쉽게 얻을 수 있다. 짧은 타이핑으로도 많은 함수들이 추가 가능해지므로 코드가 훨씬 간결해 지고 보기도 쉬워진다.
  5) 자바나 파이썬과 같이 예외처리 기능을 할 수 있기때문에 에러 발생률이 낮아진다. 또한 C에서 루비 사용을 할 수 있도록 API를 제공하기 C로 확장하는것이 용이해짐에 따라 쉽게 C확장을 할 수 있다.



3. PHP
  1) 스크립트 언어로써 HTML문서 내부에 입력하면 동시에 실행도 가능하게끔 되어 있다. 하지만 Javascript와 다르게 외부에서 접근 할 수 없는 점이 있다.
  2) 스크립트 언어임에도 불구하고, C언어 기반으로 빠른속도를 가지고 있으기때문에 개발하는데 시간이 적게 걸린다는 장점을 가지고 있다. 이에따라 현재 사용자도 늘어나고 있는 추세이다.
  3) 리눅스, 유닉스 심지어 운영체제에서도 사용할 수 있다는 점이 강점이다 리눅스 운영체제에서 PHP로 코드를 작성하면 다른 운영체제에 이전할 시 대부분의 소스를 수정하지 않고도 에러 없이 결과를 출력할 수 있다.
  4) 다른 언어들은 데이터 베이스사용에 있어 한정적이고 또한 사용하더라도 유료인 데이터 베이스를 사용하는 경우가 많은 반명 PHP는 공개용 데이터 베이스를 사용함에 따라 개발 비용이 다른 언어와 다르게 현저히 낮다.
  5) 클래스 생성과 이미지 생성, PDF파일 생성등의 함수를 자체적으로 지원하기때문에 PHP언어 하나로도 사용자가 필요로 하는 기능들을 제공한다.

4. Javascript
  여러가지 언어적들의 장점을 가지고 있으며 개발의 효율성이 뛰어나다.
  1) Os와 상관없이 실행할 수 있는 웹 언어이다. 다시 말해서 설치 된 곳이면 운영체제나 하드웨어, 그리고 웹, 네트워크, 임베디드와 같은 곳에서는 자바 프로그램이 동작 가능하기 때문에 범용성이 넓다. 이로 인해 API도 풍부하게 존재할 수 있다. 처음에는 어떤 운영체제에서든 실행이 가능하므로 Osk라고 붙어졌지만, 같은이름이 존재하여 Java로 바꾸게 되었다.
  2) C++에 있던 포인터, 다중상속, 구조체, 전역변수 Goto문 등을 제외시켜 언어의 복잡성을 줄였으며 쓰레기 수집 기능 다시말해 메모리 운영을 자동으로 실행하는 기능을 제공한다. 메모리 낭비를 줄여줌으로써 프로그램의 무게를 줄일 수 있고, 또한 결과문 출력이 더 빨라진다.
  3) 분산 네트워크 환경에서 사용될 수 있도록 설계되어 안전성이 뛰어나다. 코드를 불러오고, 검증하며, 수행하는 작업들을 단계적으로 수행하는데, 검정된 class(API)를 사용하기 때문에 안전성이 더더욱 보장된다. 각각의 class는 다른 class에서 호출하지 않는 이상 영역을 침범하지 않는다.
  4) 완벽한 객체지향 언어이다. 기능에 따라 분업된 프로그래밍을 할 수 있도록 설계해 놓았다. 따라서 여러 사람이 작업을 해도 서로 상관하지 않고도 개발 할 수 있는 여건이 좋다.
  5) 다중 스레드를 제공하는데, 스레드란 프로그램의 수행경로를 뜻한다. 다중 스레드는 여러 프로그램들이 동시에 처리되는것을 의미한다. 또한 이런 스레드를 편리하게 사용할 수 있도록 라이브러리 클래스를 제공한다.

  각 언어들의 장점이 비슷비슷한점도 있고 또한 약간의 차이가 있기도 하다. 각언어의 차이, 즉 어떤 언어가 좋냐라는 논쟁을 벌일 경우에 각 언어들의 고유 특징이 있음으로 이런 논쟁을 벌이는 것은 무의미한 것이라고 본다.
  딱 찝어서 몇가지만의 차이를 보자면, Python같은 경우에 다른 인터프리터 형식이 다른언어와 비교시 탁월환 효과를 발휘하기 때문에 사용자로 하여금 가독성이 뛰어난 점이 강점인 것 같다. Ruby또한 인터프리터 기능으로 가독성이 뛰어나다. 조사에 따르면 장점에서 언급한것과 같이 함수명을 재정의 할 수 있다는 점이 유독 눈에 띄었다. 하지만 이 둘을 비교했을때 가장 큰 차이점은 Python은 들여쓰기를 요구하는 것이고 Ruby는 그런 서식을 요구하지 않는다 정도이다. PHP는 데이터 베이스를 쓰기에 편리하다. 반면, Javascript같은 경우에 MS SQL을 사용하도록 되어 있다는 점이 차이점이다. 그렇다 해서 Javascript가 나쁘다는 것은 아니다. Javascript는 많은 사용자가 쓰기 때문에 보안성이 강하고, 또한 유지 보수가 쉽다는 점이 강점이다.


