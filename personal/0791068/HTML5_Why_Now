
HTML5란 무엇인가?

HTML5는 HTML, XHTML, HTML DOM을 이을 새로운 표준 입니다.
이전 버전인 HTML 4.01 버전은 1999년에 나왔습니다. 그 이후 웹은 상당히 많이 변했습니다.

HTML5는 여전히 작업이 진행중에 있습니다. 하지만, 대부분의 최신 웹브라우저는 HTML5 기술의 일부를 지원하고 있습니다.


HTML5는 어떻게 시작되었나?

HTML5는 World Wide Web Consortium (W3C)과 Web Hypertext Application Technology Working Group (WHATWG) 사이의 협력을 통해 탄생 했습니다.

당시 WHATWG는 웹 폼과 웹 애플리케이션 기술에 대해 작업 중이었고, W3C는 XHTML 2.0 기술에 대해 작업하고 있었습니다. 2006년, 그들은 서로 협력 하기로 결심했고 새로운 버전의 HTML을 만들기로 결정하게 됩니다.

이 때 HTML5를 위한 몇 가지 규칙이 확립 되었습니다.
새로운 기술들은 HTML, CSS, DOM, Javascript에 기반해야 한다
플래시와 같은 외부 플러그인에 대한 의존성을 낮춰야 한다
더 나은 에러 처리가 필요
스크립팅을 대체할 더 많은 마크업, 태그가 필요하다
HTML5는 장치 독립적이어야 한다
진척 사항이 일반 대중에게 투명하게 공개되어야 한다


새로 도입된 기술

HTML5에 도입되는 흥미로운 기술들은 대략 아래와 같습니다
HTML에서 직접 개체를 그릴 수 있는 Canvas 요소
손쉬운 미디어 재생을 위한 video, audio 요소
로컬 컴퓨터상에 데이터를 저장할 수 있는 더 나은 방법 제공 - 로컬 저장소(Local Storage)  ( > 쿠키)
article, footer, header, nav, section과 같이 컨텐츠의 성격을 잘 설명해 주는 새로운 요소, 태그들이 추가됨
달력(calendar), 날짜(date), 시간(time), 이메일(email), URL, 검색(search)과 같이 새로운 폼 컨트롤이 추가됨


웹브라우저 지원 상황

HTML5는 아직 공식적인 표준이 아니며, 현 시점에서 HTML5를 완전히 지원하는 웹브라우저도 없는 상황 입니다.

하지만 모든 주요 웹브라우저들이(사파리, 크롬, 파이어폭스, 오페라, Internet Explorer) 계속해서 새로운 HTML5 기술을 최신 버전 프로그램에 포함시키고 있습니다.


차세대 웹 표준 마이크로소프트, 애플, 구글, 모질라, 오페라 등 모든 웹 브라우저 벤더가 참여하고 있는 산업 표준입니다.
HTML5의 주된 목적은 과거의 HTML의 호환성을 유지하면서 웹 개발자들이 만나는 문제점을 해결하고 HTML문서가 좀 더 의미 있으면서도 웹 어플리케이션 기능을 수행할 수 있는 범용 표준을 만드는것에 있습니다.
웹 문서 기반을 그대로 유지하고 웹 브라우저 간의 상호 운용성을 위한 세부적인 지침을 담고 있으며 필요에 의해서 이해하기위한 별도의 문서도 제작 배포하고 있습니다.
 
HTML향후 웹 브라우저의 가장 표준기반 렌더링 엔진의 문서타입이 될 전망입니다.
 
HTML 5 에서는 그동안의 애매한 웹 브라우저 구현에 대한 상세 스펙을 제공합니다.
웹 개발자들이 과거 스펙의 호환성을 유지하면서 향후 버전에 정확한 기느 사용이 가능합니다. 이미 구글 및 애플등 많은 사이트들이 HTML 5로 문서작업을 하고 있습니다.
 
기존의 HTML4 보다 확장된 태그들을 지원하고 문서 구조에 적합한 header, footer, nav, section 같은 구조화 마이크업을 사용할 수 있습니다.
 
특정 기반 태그들도 추가로 지원하고 많이 쓰이는 키워드들의 요소도 그대로 사용할 수 있습니다.
 
SCC로 완전 대체 가능한 big, center, font, s, strike같은 스타이 기반 요소는 완전히 없어집니다.

HTML5의 새로운 요소들


새로운 시맨틱1/구조적 요소(태그)들

HTML5는 더 나은 구조를 위해 다음과 같이 새로운 요소를 제공하고 있습니다:

태그
설명
<article>	특정 내용이나 기사, 혹은 글을 표시하기 위해 사용됩니다. 
<aside>	본문 내용에 대한 추가적인 설명이나 혹은 Tip을 설명하기 위해서 사용하는 태그 입니다.
<bdi>	바깥쪽의 여러 텍스트와 다른 방향으로 서식이 지정된 글의 부분을 구분하기 위해 사용됩니다.
<command>	사용자가 동작시킬 수 있는 명령 버튼을 정의 합니다.
<details>	사용자가 보거나 감출 수 있는 추가적인 상세 사항을 정의 합니다.
<summary>	<details> 요소를 위한 제목을 정의합니다.
<figure>	부가적인 설명글(캡션)이 붙을 일러스트레이션, 다이어그램, 사진, 코드 목록과 같은 컨텐츠를 지정합니다.

<figcaption>	<figure> 요소에 대한 설명글을 정의합니다.
<footer>	문서나 특정 구역에 대한 하단부(푸터, Footer)를 정의합니다.
<header>	문서나 구역의 도입 부분, 혹은 상단 네비게이션 요소의 그룹을 지정합니다.
<hgroup>	문서의 제목부가 여러 단계로 나눠져 있는 경우 <h1>에서 <h6>까지의 요소들을 집합으로 묶습니다.
<mark>	의미적으로 중요한 부분을 강조하기 위해 사용합니다. 시각적 효과는 없지만, 내용상 다른 부분보다 중요한 부분임을 표시할때 사용할 수 있습니다. 시각적 효과는 CSS를 통해 mark { font-weight:bold; color:black; }... 와 같은 형태로 적용할 수 있습니다.
<meter>	특정 범위내에서 특정한 수치를 나타낼때 사용하는 태그 입니다. 지정된 값은 시각적으로 게이지바 (프로그래스바) 형태로 화면에 나타납니다. 현재 크롬, 오페라 웹브라우저만 이 태그를 지원하고 있습니다.
<nav>	네비게이션 링크 포함된 영역임을 나타낼때 사용합니다.
<progress>	작업의 진행률을 프로그래스바 형태로 나타냅니다. 역시 크롬과 오페라에서만 지원되고 있습니다. 
<ruby>	텍스트위에 주석을 달때 사용하는 태그로서, 일본어나 중국어와 같은 동아시아 문자열을 표현할때 사용합니다.
<rt>	<ruby> 요소 하위에 사용되며, 텍스트 윗쪽에 달릴 실제 주석의 내용을 정의합니다.
<rp>	<ruby> 문자열 주석 태그를 지원하지 않는 웹브라우저에서 표시될 메시지를 정의합니다.
<section>	문서의 구역을 정의합니다.
<time>	날짜나 시간을 정의합니다.
<wbr>	줄 분리 지점을 정의합니다.

새로운 미디어 요소들


HTML5는 미디어 컨텐츠를 위한 새로운 요소들을 제공하고 있습니다.

태그	설명
<audio>	사운드 컨텐츠를 정의합니다.
<video>	비디오나 영상을 정의합니다.
<source>	<video>나 <audio> 태그 내부에 여러개의 미디어 자원을 지정합니다.
<embed>	외부 프로그램이나 상호 작용적인 컨텐츠를 위한 컨테이너를 정의합니다. (플러그인용)
<track>	<video>나 <audio> 요소에 대해 텍스트 형태의 트랙 정보나 자막을 지정해 줍니다.

새롭게 등장한 <canvas> 요소

태그	설명
<canvas>	스크립트를 사용해 실시간으로 그래픽을 그릴때 사용됩니다. (스크립트는 거의 대부분 자바스크립트가 사용됨)

새로운 양식(Form) 요소들

HTML5는 더 많은 기능을 위한 새로운 폼(Form) 요소들을 제공합니다. 

태그	설명
<datalist>	입력 컨트롤을 위한 옵션들을 목록 형태로 사전 정의해 지정합니다.
<keygen>	웹브라우저가 암호화를 위한 공개키, 개인키를 생성할 수 있도록 해줍니다.
<output>	계산의 결과를 표현합니다.


사라진 요소들

HTML5에서는 아래와 같은 HTML 4.01의 요소들이 제거 되었습니다.
<acronym>
<applet>
<basefont>
<big>
<center>
<dir>
<font>
<frame>
<frameset>
<noframes>
<strike>
<tt>
<u>

   단점이 없는 것만이 아닙니다.
 ActiveX 나 기타 추가 설치 프로그램없이 브라우져 상에서 Flash와 비슷한 혹은 그 이상의 기능을 구현 할수 있게된 기술로 이 전의 브라우져 에서의 단순한 기능이외에도  동영상 플레이, GPU를 이용한 3D처리 등의 기술을 보이며 각광을 받게된 기술입니다.

 구현 방법에 대해 설명드리자면 순수 HTML 방식에 Javascript를 정식적으로 채용하고  더나아가 브라우져의 기능을 향상시켜 브라우져 자체의 View 기능 향상, Javascript 와의 밀접률을 향상 을 시켜서 HTML5를 지원하는 브라우져 라면 동일한 화면을 볼수있도록 구현한 기술입니다. 따라서 단순한 HTML 뿐만 아니라 HTML + Javascript + 기능(브라우져 자체 Function) = HTML5라는 것입니다.

 HTML5는 초기에는 Flash 를 대체할 수단으로서 이슈가 되었었는대요. 이러한 HTML5 역시 문제점이 없는것이 아니라고 생각합니다.


1. Javascript의 지원

 첫번째로는 Javascript의 지원입니다. HTML방식이 물론 동적인 언어가 아니기 때문에 프로그래밍적인 부분이 있어야 합니다. 그러한 것을 해결할 최적의 방법이 Javascript라는 것은 저도 인정할수 밖에 없는 부분입니다. 하지만 브라우져에 Flash 를 깔아야만 하는 것과 별반 다를바 없습니다. 한국 컴퓨터의 90%(혹은 95%)가 Flash 가 깔려 있고 전세계 컴퓨터 역시 대다수가 Flash 가 깔려 있습니다. 그러한 상황에서 Javascript라고 해서 특별한 이점을 가지기 보다 오히려 3번 문제를 발생시키는 단점이 발생합니다

2.브라우져의 지원

 계속적으로 해결될 부분이지만 Flash 와 비교 해보자면 밀리는 부분인것이 사실입니다. Flash 의 경우 어떤 브라우져 라도 설치만 한다면 작동합니다. 하지만 HTML5는 브라우져 자체의 지원이기 때문에 Flash 에 비해 밀릴수 밖에 없는것이 사실입니다.
 요즘 Windows에서도 IE6/7/8(HTML5 비지원)의 감소와 함께 Chrome과 Firefox(우수한 보안 정책을 가지면서 HTML5구동이 가능한 브라우져)의 비중이 높아 지는 소식이 들려 오고 있습니다.

3.소스의 Packaging ( 소스의 저작권 문제 )
  
HTML이나 웹 개발을 하시는 분들이시면 아실것입니다. 웹의 소스는 개방된형태로 View를 하기위해서 사용자에게 다운받아 지고 혹은 강제로 불러올수 있습니다.( 오른쪽 클릭 방지는 단순히 차선책일뿐입니다.) 한 가지 예를 들어 보겠습니다. 아래의 그림은 Facebook의 한 html5로 만들어진 게임입니다.

Flash 를 사용할경우는 위와 같이 쉽게 소스를 빼다 쓸수는 없습니다. (디코딩을 한다고 해도 재대로된 결과물은 얻기 힘듭니다.) 위와 같이 HTML5에서 미디어의 구동을 위해서는 미디어 자체를 사용자의 컴퓨터에 소스로 공개 하는 수밖에 없습니다.( 꼭 해결할 방법이 있어야 하는 부분입니다.) 개발자들은 힘들게 만들거나 비싸게 구한 소스를 위와 같이 뿌려 줄 수 없음에도 후에 문제가 발생할여지를 만들수 밖에 없습니다.

 HTML5는 분명 미래의 기술이고 모바일 브라우져에서는 Flash 의 과도한 CPU사용을 대체할수 있는 기술임에는 틀림이 없습니다. 하지만 순수 HTML5만으로는 아직 많이 미흡한 부분이 많다고 생각됩니다. 여기서 한가지 지적해야 할 부분이 있는대요. 스티븐 잡스가 HTML5를 지원하고 Flash 를 비난했었습니다. 하지만 Flash 역시 발전하지 않는 것이 아니며 Flash 가 내부적으로 브라우져에 따라 HTML5의 기술을 더불어 사용한다면 Flash 는 더욱 막강한 영역을 차지 하게 된다는 생각이 듭니다.

html5의 2012에 뽑을 수있는 예측 14가지를 조사해보았습니다.

1.  Web browsers will look more like iPhones
2012년 HTML5는 사이트간의 연결을 지원하는 API를 스펙에 추가할 것이다. 예를 들면 postMessage API를 사용하면 아이프레임 안에서 구동되는 징가 게임이 페이스북 프레임과 직접 커뮤니케이션을 할 수 있다. 그리고 CORS (Cross Origin Resource Sharing)를 이용하면 서로 다른 사이트가 커뮤니케이션하는 것이 보다 용이해진다고 한다. CORS는 스타트업이 페이스북 사이트로부터 사진을 다운받아 자신의 사이트에서 편집하고 다시 페이스북으로 업로드하는 것을 간결하게 구현해준다. HTML5에서 응용 가능한 새로운 시멘틱 정보(Semantics and Microdata 참고)로 다른 웹페이지에서 정보를 뽑아내는 형식의 웹툴 개발도 쉬워질 것이다. 그나저나 XSS 대응 한다고 우리가 직접 작성하고 신뢰할 수 있어도 차단 당하는 이슈에 대안도 가능한 것인가??

 2. More and more applications will just be built in HTML5 instead of downloadable apps 
2012년부터 HTML5를 통해 브라우저들은 push notifications, geolocation, 애플리케이션의 오프라인 구동을 지원할 것이다. 일부 브라우저는 iOS와 같은 UI를 적용할지도 모른다.

3.  More and more applications will just be built in HTML5 instead of downloadable apps 
지금 보다 많은 군의 웹앱이 출시하게 될 것이다. 콘텐츠 제작/편집툴도 HTML5 버전으로 나오길 기대한다.

4. Internet Explorer & Microsoft will dramatically improve in coolness.
IE가 HTML5 기반으로 퍼포먼스 증진에 크게 투자를 기울인만큼 기대해도 좋다는 평가이다. 하드웨어 가속을 지원을 통해 브라우저 내에 표시되는 canvas 영역은 경쟁사 브라우저보다 스피드 면에서 우월할 것이다(이거 논란이 좀 많은 듯 싶다.. 크롬 하드웨어 가속을 켜고 시연해보면 별 차이가 없다는 코멘트도 있음). MS는 추가로 HTML5웹과 데스크탑이 연동할 수 있는 방법을 윈도우에 추가할 예정이라고 한다. 어쨌든 HTML5에 적극적으로 대응할 모양이다.

5. Browser manufacturers will get into the App Store business
애플 앱스토어 비즈니스에 자극 받은 구글이 크롬 앱스토어를 시작한 것처럼 많은 브라우저들이 자체 앱스토어를 오픈할 것이고 이는 HTML5 개발자에게 호재로 작용할 것이다.

6. At least one major console game released or re-released using WebGL
클라이언트단의 설치 없이 AAA급의 콘솔 게임 회사들이 WebGL을 활용해 3D 웹 게임을 런칭할 것이다. Team Fortress 2, Assassins Creed 같이 잘 알려진 게임이 웹버전화 혹은 Eve Online, WOW 같은 MMO.. 아니면 새로운 타입의 웹게임의 런칭을 의미할지도 모른다.

7. Many more applications will use offline cache and will work offline
오프라인 어플리케이션 캐쉬가 HTML5앱의 사용성과 속도를 엄청나게 향상시킬 것이다. 로컬 캐쉬를 이용하면 서버 통신 없이 로컬 DB를 활용해 효율적으로 앱구현이 가능하다.
하지만 컴퓨터에 있는 캐쉬를 삭제하면 앱과 관련된 데이터가 삭제될 것이고, 해당 로컬 캐쉬에 개인 정보과 저장되어 보안 관련 이슈가 발생할 수 있다.

8. HTML5 ads will become preval!ent and overtake Flash adsiOS 디바이스에서 발생하는 많은 양의 트래픽을 광고로 수익화하고자 웹사업자들의 니즈가 분명히 존재하고 있다. 당근 플래시는 iOS에서 작동하지 않을테니 당연히 이와 같은 수익화의 니즈는 HTML5에 대한 관심으로 넘어가는 것이 당연하다. 많은 스타트업이 HTML5 광고 시장의 과제인 샌드 박싱, 보안, 오소링툴 이슈 해결을 위해 등장하게 될 것이다.

9. JavaScript will get a lot faster with better memory management and typed arrays
이미 자바스크립트는 현존하는 랭귀지 중에서 가장 빠른 것 중에 하나이지만, 여전히 지금보다 개선 시킬 여지가 많이 있다는 것이다. 구글 크롬은 메모리 관리와 가비지 콜렉션 알고리즘을 지원하고 있으며, 자바스크립트의 typed array와 함께 활용되면 자바스크립트의 퍼포먼스를 소위 고급언어라 지칭하는 자바와 비슷한 수준에 이르게 할 것이라고 한다.

10. Canvas will get hardware acceleration in more browsers (but no major mobile browsers)
많은 브라우저 제조사들이 IE의 방향성을 따라가면서 하드웨어 가속을 캔버스 구현이 활용할 것이다.  FF가 이러한 흐름에서 가장 위험해 보이며, 만일에 캔버스 가속 지원 관련해서 성공적으로 구현하지 못할 경우, 속도와 레거시 코드 이슈로 위기를 맞이할 것이라고 본다. 하지만 2012년 모바일 환경에서 하드웨어 가속 캔버스를 지원하는 업체는 없을 것 같다. 2013년 정도까지 기다려 봐야할 것 같다. (파이어폭스 부분은 뭐가 문제라는지 잘 모르겠다. 아마 내가 영어가 딸린듯)

11. People will play popular HTML5 games on their mobile devices from Zynga and others, but they will be very simple games
HTML5 기반의 게임을 모바일, PC웹, 페이스북 앱 같은 형태로 즐기는 사람을 주변에서 쉽게 보게 될 것이다. 하지만 모바일 환경에서 HTLM5 게임은 메뉴 기반 게임, 턴 베이스 게임, 카드 및 보드 게임 같은 제한된 형식으로 런칭할 것 같다. 징가의 Ville류의 게임은 2012년에는 강타하지 않을 것으로 본다. (결국 앞서 말한 모바일환경에서 하드웨어 가속 캔버스 지원이 되지 않을 것이라는 전망과 맞물려서 뭔가 말하고 싶어하는 것 같다.)

12. Facebook will release improved HTML5-based APIs that allow for more seamless integration with external websites
페이스북은 페이스북 커넥트와 연결된 외부 사이트와 공조를 더욱 타이트하기 위해 HTLM5 기반의 API를 만들어낼 것이란 코멘트이다.

13. Facebook will get a lot more seamlessly integrated with your desktop 
데스크탑에 있는 파일 드래그-드랍, 파일 시스템 어세스, 포토 싱크 위젯을 생각해보자. 이런 류의 기능들이 소셜그래프와 함께 데스크탑과 웹 브라우저 사이에서 아무 경계없이 HTML5를 통해 쉽게 구현될 것이다.

14. Apple will NOT fix HTML5 sound in mobile Safari
HTML5 사운드는 iOS4 이전 버전에서 모바일 사파리에서 지원이 되었다. 하지만 이후 아이튠즈 관련한 애플의 정책으로 사운드 관련 대부분의 API가 지원 되지 않은 상황이다. 2012년에도 애플은 자사의 에코시스템에 대한 완벽한 컨트롤을 유지하고 싶기 때문에 HTLM5 사운드 관련해서 정책을 수정하지 않을 것이다.